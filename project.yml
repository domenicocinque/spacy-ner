title: "Named Entity Recognition"
description: "Train a spaCy model to predict named entities in text"

# Variables that can be used in the commands below. 
vars:
  name: "ner_project"
  lang: "en"
  train: "train.txt"
  dev: "dev.txt"
  test: "test.txt"
  # Set your GPU ID, -1 is CPU
  gpu_id: -1
  model: "en_core_web_md"

# These are the directories that the project needs. The project CLI will make
# sure that they always exist.
directories: ["assets", "corpus", "configs", "training", "scripts", "packages"]

# Assets that should be downloaded or available in the directory. We're shipping
# them with the project, so they won't have to be downloaded.
assets:
  - dest: "assets/train.txt"
    description: "Conll train data" 
  - dest: "assets/dev.txt"
    description: "Conll validation data"
  - dest: "assets/test.txt"
    description: "Conll test data"  

# Workflows are sequences of commands (see below) executed in order. You can
# run them via "spacy project run [workflow]". If a commands's inputs/outputs
# haven't changed, it won't be re-run.
workflows:
  all:
    - convert
    - create-config
    - train
    - evaluate

# Project commands
commands:
  - name: "download"
    help: "Download a spaCy model with pretrained vectors"
    script:
      - "python -m spacy download ${vars.model}"

  - name: "convert"
    help: "Convert the data to spaCy's binary format"
    script:
      - "python -m spacy convert assets/${vars.train} corpus/ --converter conll -n 10"
      - "python -m spacy convert assets/${vars.dev} corpus/ --converter conll -n 10"
      - "python -m spacy convert assets/${vars.test} corpus/ --converter conll -n 10"
    deps:
      - "assets/${vars.train}"
      - "assets/${vars.dev}"
      - "assets/${vars.test}"
    outputs:
      - "corpus/train.spacy"
      - "corpus/dev.spacy"
      - "corpus/test.spacy"

  - name: "create-config"
    help: "Create a config file for a NER pipeline"
    script:
      - "python -m spacy init config --lang ${vars.lang} --pipeline ner configs/config.cfg --force"
    outputs:
      - "configs/config.cfg"

  - name: "train"
    help: "Train the NER model"
    script:
      - "python -m spacy train configs/config.cfg --output training/ --paths.train corpus/train.spacy --paths.dev corpus/dev.spacy --training.eval_frequency 10 --training.patience 50 --gpu-id ${vars.gpu_id}"
    deps:
      - "configs/config.cfg"
      - "corpus/train.spacy"
      - "corpus/dev.spacy"
    outputs:
      - "training/model-best"

  - name: "evaluate"
    help: "Evaluate the model and export metrics"
    script:
      - "python -m spacy evaluate training/model-best corpus/dev.spacy --output training/metrics.json"
    deps:
      - "corpus/dev.spacy"
      - "training/model-best"
    outputs:
      - "training/metrics.json"

  - name: visualize-model
    help: Visualize the model's output interactively using Streamlit
    script:
      - "streamlit run scripts/visualize_model.py training/model-best \"I saw Shaka Khan in London.\""
    deps:
      - "scripts/visualize_model.py"
      - "training/model-best"